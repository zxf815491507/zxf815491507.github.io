{"meta":{"title":"zxf个人博客","subtitle":"啊梦","description":"hello,every body!","author":"Xiaofei Zhang","url":"https://zxfblog.cn","root":"/"},"pages":[{"title":"","date":"2022-02-19T04:02:48.545Z","updated":"2022-02-19T04:02:48.545Z","comments":true,"path":"404.html","permalink":"https://zxfblog.cn/404.html","excerpt":"","text":"404 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"","date":"2022-02-19T05:07:27.931Z","updated":"2022-02-19T05:07:27.931Z","comments":true,"path":"about/index.html","permalink":"https://zxfblog.cn/about/index.html","excerpt":"","text":"layout: docsseo_title: 关于bottom_meta: falsesidebar: []valine: placeholder: 有什么想对我说的呢？"},{"title":"","date":"2022-02-19T05:05:33.446Z","updated":"2022-02-19T05:05:33.446Z","comments":true,"path":"categories/index.html","permalink":"https://zxfblog.cn/categories/index.html","excerpt":"","text":"layout: categoryindex: truetitle: 所有分类"},{"title":"friends","date":"2022-02-19T05:08:07.000Z","updated":"2022-02-19T05:08:07.360Z","comments":true,"path":"friends/index.html","permalink":"https://zxfblog.cn/friends/index.html","excerpt":"","text":""},{"title":"","date":"2022-02-19T05:06:44.329Z","updated":"2022-02-19T05:06:44.329Z","comments":true,"path":"tags/index.html","permalink":"https://zxfblog.cn/tags/index.html","excerpt":"","text":"layout: tagindex: truetitle: 所有标签"}],"posts":[{"title":"","slug":"JAVA对象","date":"2022-02-19T04:08:42.729Z","updated":"2021-08-31T05:25:47.302Z","comments":true,"path":"2022/02/19/JAVA对象/","link":"","permalink":"https://zxfblog.cn/2022/02/19/JAVA%E5%AF%B9%E8%B1%A1/","excerpt":"","text":"JAVA对象对象的布局：1.实例数据 浮动的 2.对象头 固定的 3.对齐填充 浮动的 对象头：Mark Word: 64bit klass :32 bit/64 bit 是否开启指针压缩 对象的状态：lock占两个比特位，共可以表达四种状态，偏向锁用单独的biased_lock =1 来标识 age 用来表示对象的年龄，用于GC时使用","categories":[],"tags":[]},{"title":"","slug":"JVM","date":"2022-02-19T04:08:38.755Z","updated":"2021-07-24T03:33:40.358Z","comments":true,"path":"2022/02/19/JVM/","link":"","permalink":"https://zxfblog.cn/2022/02/19/JVM/","excerpt":"","text":"JVM1.JVM的整体结构 JVM的生命周期 JVM详细结构图 1.类加载器 加载 链接 初始化 2.执行引擎 3.运行时数据区","categories":[],"tags":[]},{"title":"","slug":"netty-NIO","date":"2022-02-19T04:08:34.959Z","updated":"2021-12-14T06:00:23.249Z","comments":true,"path":"2022/02/19/netty-NIO/","link":"","permalink":"https://zxfblog.cn/2022/02/19/netty-NIO/","excerpt":"","text":"NIO模型多路复用 获取操作系统epoll的结构体，封装了操作系统的相关函数 上图：注册，调用pollWrapper将fd(文件描述服务，ServerSocketChannel)放入到array集合中，用于后续观察是否有事件发生 上图：pollWrapper.poll对所有的channel进行轮询 调用上图操作系统内核函数方法让监听事件生效 调用上图linux系统函数调用 epoll_wait ：获取epoll实例，看事件集合是否有事件，没有等待，有事件处理事件 客户端和服务端通过网络驱动程序，调用linux内核函数进行数据交互， 有链接产生操作系统感知到通过中断程序将事件放入就绪事件列表 –解决CPU空转，只处理事件集合 ###面试图 select(channel最多1024)，poll,epoll区别 Redis线程模型 底层实现 创建epoll实例 epoll_ctl：监听channel注册过来的事件 处理事件 基于epoll的实现 Netty-Java 网络编程框架Netty和Tomcat有什么区别？Netty和Tomcat最大的区别就在于通信协议，Tomcat是基于Http协议的，他的实质是一个基于http协议的web容器，但是Netty不一样，他能通过编程自定义各种协议，因为netty能够通过codec自己来编码/解码字节流，完成类似redis访问的功能，这就是netty和tomcat最大的不同。 Netty实现 实现Netty处理类 建立链接回调 读取数据 Netty线程模型 Reactor相应式编程设计模式","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2022-02-12T13:32:05.272Z","updated":"2022-02-12T13:31:08.708Z","comments":true,"path":"2022/02/12/hello-world/","link":"","permalink":"https://zxfblog.cn/2022/02/12/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}